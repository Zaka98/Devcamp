{"ast":null,"code":"alert(\"hello\");\n/*\n * HTML5Sortable package\n * https://github.com/lukasoppermann/html5sortable\n *\n * Maintained by Lukas Oppermann <lukas@vea.re>\n *\n * Released under the MIT license.\n */\n\nvar sortable = function () {\n  'use strict';\n  /**\n   * Get or set data on element\n   * @param {HTMLElement} element\n   * @param {string} key\n   * @param {any} value\n   * @return {*}\n   */\n\n  function addData(element, key, value) {\n    if (value === undefined) {\n      return element && element.h5s && element.h5s.data && element.h5s.data[key];\n    } else {\n      element.h5s = element.h5s || {};\n      element.h5s.data = element.h5s.data || {};\n      element.h5s.data[key] = value;\n    }\n  }\n  /**\n   * Remove data from element\n   * @param {HTMLElement} element\n   */\n\n\n  function removeData(element) {\n    if (element.h5s) {\n      delete element.h5s.data;\n    }\n  }\n  /* eslint-env browser */\n\n  /**\n   * Filter only wanted nodes\n   * @param {NodeList|HTMLCollection|Array} nodes\n   * @param {String} selector\n   * @returns {Array}\n   */\n\n\n  var filter = function filter(nodes, selector) {\n    if (!(nodes instanceof NodeList || nodes instanceof HTMLCollection || nodes instanceof Array)) {\n      throw new Error('You must provide a nodeList/HTMLCollection/Array of elements to be filtered.');\n    }\n\n    if (typeof selector !== 'string') {\n      return Array.from(nodes);\n    }\n\n    return Array.from(nodes).filter(function (item) {\n      return item.nodeType === 1 && item.matches(selector);\n    });\n  };\n  /* eslint-env browser */\n\n  /* eslint-disable no-use-before-define */\n\n\n  var stores = new Map();\n  /* eslint-enable no-use-before-define */\n\n  /**\n   * Stores data & configurations per Sortable\n   * @param {Object} config\n   */\n\n  var Store =\n  /** @class */\n  function () {\n    function Store() {\n      this._config = new Map(); // eslint-disable-line no-undef\n\n      this._placeholder = undefined; // eslint-disable-line no-undef\n\n      this._data = new Map(); // eslint-disable-line no-undef\n    }\n\n    Object.defineProperty(Store.prototype, \"config\", {\n      /**\n       * get the configuration map of a class instance\n       * @method config\n       * @return {object}\n       */\n      get: function get() {\n        // transform Map to object\n        var config = {};\n\n        this._config.forEach(function (value, key) {\n          config[key] = value;\n        }); // return object\n\n\n        return config;\n      },\n\n      /**\n       * set the configuration of a class instance\n       * @method config\n       * @param {object} config object of configurations\n       */\n      set: function set(config) {\n        if (typeof config !== 'object') {\n          throw new Error('You must provide a valid configuration object to the config setter.');\n        } // combine config with default\n\n\n        var mergedConfig = Object.assign({}, config); // add config to map\n\n        this._config = new Map(Object.entries(mergedConfig));\n      },\n      enumerable: false,\n      configurable: true\n    });\n    /**\n     * set individual configuration of a class instance\n     * @method setConfig\n     * @param  key valid configuration key\n     * @param  value any value\n     * @return void\n     */\n\n    Store.prototype.setConfig = function (key, value) {\n      if (!this._config.has(key)) {\n        throw new Error(\"Trying to set invalid configuration item: \" + key);\n      } // set config\n\n\n      this._config.set(key, value);\n    };\n    /**\n     * get an individual configuration of a class instance\n     * @method getConfig\n     * @param  key valid configuration key\n     * @return any configuration value\n     */\n\n\n    Store.prototype.getConfig = function (key) {\n      if (!this._config.has(key)) {\n        throw new Error(\"Invalid configuration item requested: \" + key);\n      }\n\n      return this._config.get(key);\n    };\n\n    Object.defineProperty(Store.prototype, \"placeholder\", {\n      /**\n       * get the placeholder for a class instance\n       * @method placeholder\n       * @return {HTMLElement|null}\n       */\n      get: function get() {\n        return this._placeholder;\n      },\n\n      /**\n       * set the placeholder for a class instance\n       * @method placeholder\n       * @param {HTMLElement} placeholder\n       * @return {void}\n       */\n      set: function set(placeholder) {\n        if (!(placeholder instanceof HTMLElement) && placeholder !== null) {\n          throw new Error('A placeholder must be an html element or null.');\n        }\n\n        this._placeholder = placeholder;\n      },\n      enumerable: false,\n      configurable: true\n    });\n    /**\n     * set an data entry\n     * @method setData\n     * @param {string} key\n     * @param {any} value\n     * @return {void}\n     */\n\n    Store.prototype.setData = function (key, value) {\n      if (typeof key !== 'string') {\n        throw new Error('The key must be a string.');\n      }\n\n      this._data.set(key, value);\n    };\n    /**\n     * get an data entry\n     * @method getData\n     * @param {string} key an existing key\n     * @return {any}\n     */\n\n\n    Store.prototype.getData = function (key) {\n      if (typeof key !== 'string') {\n        throw new Error('The key must be a string.');\n      }\n\n      return this._data.get(key);\n    };\n    /**\n     * delete an data entry\n     * @method deleteData\n     * @param {string} key an existing key\n     * @return {boolean}\n     */\n\n\n    Store.prototype.deleteData = function (key) {\n      if (typeof key !== 'string') {\n        throw new Error('The key must be a string.');\n      }\n\n      return this._data[\"delete\"](key);\n    };\n\n    return Store;\n  }();\n  /**\n   * @param {HTMLElement} sortableElement\n   * @returns {Class: Store}\n   */\n\n\n  var store = function store(sortableElement) {\n    // if sortableElement is wrong type\n    if (!(sortableElement instanceof HTMLElement)) {\n      throw new Error('Please provide a sortable to the store function.');\n    } // create new instance if not avilable\n\n\n    if (!stores.has(sortableElement)) {\n      stores.set(sortableElement, new Store());\n    } // return instance\n\n\n    return stores.get(sortableElement);\n  };\n  /**\n   * @param {Array|HTMLElement} element\n   * @param {Function} callback\n   * @param {string} event\n   */\n\n\n  function addEventListener(element, eventName, callback) {\n    if (element instanceof Array) {\n      for (var i = 0; i < element.length; ++i) {\n        addEventListener(element[i], eventName, callback);\n      }\n\n      return;\n    }\n\n    element.addEventListener(eventName, callback);\n    store(element).setData(\"event\" + eventName, callback);\n  }\n  /**\n   * @param {Array<HTMLElement>|HTMLElement} element\n   * @param {string} eventName\n   */\n\n\n  function removeEventListener(element, eventName) {\n    if (element instanceof Array) {\n      for (var i = 0; i < element.length; ++i) {\n        removeEventListener(element[i], eventName);\n      }\n\n      return;\n    }\n\n    element.removeEventListener(eventName, store(element).getData(\"event\" + eventName));\n    store(element).deleteData(\"event\" + eventName);\n  }\n  /**\n   * @param {Array<HTMLElement>|HTMLElement} element\n   * @param {string} attribute\n   * @param {string} value\n   */\n\n\n  function addAttribute(element, attribute, value) {\n    if (element instanceof Array) {\n      for (var i = 0; i < element.length; ++i) {\n        addAttribute(element[i], attribute, value);\n      }\n\n      return;\n    }\n\n    element.setAttribute(attribute, value);\n  }\n  /**\n   * @param {Array|HTMLElement} element\n   * @param {string} attribute\n   */\n\n\n  function removeAttribute(element, attribute) {\n    if (element instanceof Array) {\n      for (var i = 0; i < element.length; ++i) {\n        removeAttribute(element[i], attribute);\n      }\n\n      return;\n    }\n\n    element.removeAttribute(attribute);\n  }\n  /**\n   * @param {HTMLElement} element\n   * @returns {Object}\n   */\n\n\n  var offset = function offset(element) {\n    if (!element.parentElement || element.getClientRects().length === 0) {\n      throw new Error('target element must be part of the dom');\n    }\n\n    var rect = element.getClientRects()[0];\n    return {\n      left: rect.left + window.pageXOffset,\n      right: rect.right + window.pageXOffset,\n      top: rect.top + window.pageYOffset,\n      bottom: rect.bottom + window.pageYOffset\n    };\n  };\n  /**\n   * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n   * @param {Function} func to debounce\n   * @param {number} time to wait before calling function with latest arguments, 0 - no debounce\n   * @returns {function} - debounced function\n   */\n\n\n  var debounce = function debounce(func, wait) {\n    if (wait === void 0) {\n      wait = 0;\n    }\n\n    var timeout;\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      clearTimeout(timeout);\n      timeout = setTimeout(function () {\n        func.apply(void 0, args);\n      }, wait);\n    };\n  };\n  /* eslint-env browser */\n\n  /**\n   * Get position of the element relatively to its sibling elements\n   * @param {HTMLElement} element\n   * @returns {number}\n   */\n\n\n  var getIndex = function getIndex(element, elementList) {\n    if (!(element instanceof HTMLElement) || !(elementList instanceof NodeList || elementList instanceof HTMLCollection || elementList instanceof Array)) {\n      throw new Error('You must provide an element and a list of elements.');\n    }\n\n    return Array.from(elementList).indexOf(element);\n  };\n  /* eslint-env browser */\n\n  /**\n   * Test whether element is in DOM\n   * @param {HTMLElement} element\n   * @returns {boolean}\n   */\n\n\n  var isInDom = function isInDom(element) {\n    if (!(element instanceof HTMLElement)) {\n      throw new Error('Element is not a node element.');\n    }\n\n    return element.parentNode !== null;\n  };\n  /* eslint-env browser */\n\n  /**\n   * Insert node before or after target\n   * @param {HTMLElement} referenceNode - reference element\n   * @param {HTMLElement} newElement - element to be inserted\n   * @param {String} position - insert before or after reference element\n   */\n\n\n  var insertNode = function insertNode(referenceNode, newElement, position) {\n    if (!(referenceNode instanceof HTMLElement) || !(referenceNode.parentElement instanceof HTMLElement)) {\n      throw new Error('target and element must be a node');\n    }\n\n    referenceNode.parentElement.insertBefore(newElement, position === 'before' ? referenceNode : referenceNode.nextElementSibling);\n  };\n  /**\n   * Insert before target\n   * @param {HTMLElement} target\n   * @param {HTMLElement} element\n   */\n\n\n  var insertBefore = function insertBefore(target, element) {\n    return insertNode(target, element, 'before');\n  };\n  /**\n   * Insert after target\n   * @param {HTMLElement} target\n   * @param {HTMLElement} element\n   */\n\n\n  var insertAfter = function insertAfter(target, element) {\n    return insertNode(target, element, 'after');\n  };\n  /* eslint-env browser */\n\n  /**\n   * Filter only wanted nodes\n   * @param {HTMLElement} sortableContainer\n   * @param {Function} customSerializer\n   * @returns {Array}\n   */\n\n\n  var serialize = function serialize(sortableContainer, customItemSerializer, customContainerSerializer) {\n    if (customItemSerializer === void 0) {\n      customItemSerializer = function customItemSerializer(serializedItem, sortableContainer) {\n        return serializedItem;\n      };\n    }\n\n    if (customContainerSerializer === void 0) {\n      customContainerSerializer = function customContainerSerializer(serializedContainer) {\n        return serializedContainer;\n      };\n    } // check for valid sortableContainer\n\n\n    if (!(sortableContainer instanceof HTMLElement) || !sortableContainer.isSortable === true) {\n      throw new Error('You need to provide a sortableContainer to be serialized.');\n    } // check for valid serializers\n\n\n    if (typeof customItemSerializer !== 'function' || typeof customContainerSerializer !== 'function') {\n      throw new Error('You need to provide a valid serializer for items and the container.');\n    } // get options\n\n\n    var options = addData(sortableContainer, 'opts');\n    var item = options.items; // serialize container\n\n    var items = filter(sortableContainer.children, item);\n    var serializedItems = items.map(function (item) {\n      return {\n        parent: sortableContainer,\n        node: item,\n        html: item.outerHTML,\n        index: getIndex(item, items)\n      };\n    }); // serialize container\n\n    var container = {\n      node: sortableContainer,\n      itemCount: serializedItems.length\n    };\n    return {\n      container: customContainerSerializer(container),\n      items: serializedItems.map(function (item) {\n        return customItemSerializer(item, sortableContainer);\n      })\n    };\n  };\n  /* eslint-env browser */\n\n  /**\n   * create a placeholder element\n   * @param {HTMLElement} sortableElement a single sortable\n   * @param {string|undefined} placeholder a string representing an html element\n   * @param {string} placeholderClasses a string representing the classes that should be added to the placeholder\n   */\n\n\n  var makePlaceholder = function makePlaceholder(sortableElement, placeholder, placeholderClass) {\n    var _a;\n\n    if (placeholderClass === void 0) {\n      placeholderClass = 'sortable-placeholder';\n    }\n\n    if (!(sortableElement instanceof HTMLElement)) {\n      throw new Error('You must provide a valid element as a sortable.');\n    } // if placeholder is not an element\n\n\n    if (!(placeholder instanceof HTMLElement) && placeholder !== undefined) {\n      throw new Error('You must provide a valid element as a placeholder or set ot to undefined.');\n    } // if no placeholder element is given\n\n\n    if (placeholder === undefined) {\n      if (['UL', 'OL'].includes(sortableElement.tagName)) {\n        placeholder = document.createElement('li');\n      } else if (['TABLE', 'TBODY'].includes(sortableElement.tagName)) {\n        placeholder = document.createElement('tr'); // set colspan to always all rows, otherwise the item can only be dropped in first column\n\n        placeholder.innerHTML = '<td colspan=\"100\"></td>';\n      } else {\n        placeholder = document.createElement('div');\n      }\n    } // add classes to placeholder\n\n\n    if (typeof placeholderClass === 'string') {\n      (_a = placeholder.classList).add.apply(_a, placeholderClass.split(' '));\n    }\n\n    return placeholder;\n  };\n  /* eslint-env browser */\n\n  /**\n   * Get height of an element including padding\n   * @param {HTMLElement} element an dom element\n   */\n\n\n  var getElementHeight = function getElementHeight(element) {\n    if (!(element instanceof HTMLElement)) {\n      throw new Error('You must provide a valid dom element');\n    } // get calculated style of element\n\n\n    var style = window.getComputedStyle(element); // get only height if element has box-sizing: border-box specified\n\n    if (style.getPropertyValue('box-sizing') === 'border-box') {\n      return parseInt(style.getPropertyValue('height'), 10);\n    } // pick applicable properties, convert to int and reduce by adding\n\n\n    return ['height', 'padding-top', 'padding-bottom'].map(function (key) {\n      var _int = parseInt(style.getPropertyValue(key), 10);\n\n      return isNaN(_int) ? 0 : _int;\n    }).reduce(function (sum, value) {\n      return sum + value;\n    });\n  };\n  /* eslint-env browser */\n\n  /**\n   * Get width of an element including padding\n   * @param {HTMLElement} element an dom element\n   */\n\n\n  var getElementWidth = function getElementWidth(element) {\n    if (!(element instanceof HTMLElement)) {\n      throw new Error('You must provide a valid dom element');\n    } // get calculated style of element\n\n\n    var style = window.getComputedStyle(element); // pick applicable properties, convert to int and reduce by adding\n\n    return ['width', 'padding-left', 'padding-right'].map(function (key) {\n      var _int2 = parseInt(style.getPropertyValue(key), 10);\n\n      return isNaN(_int2) ? 0 : _int2;\n    }).reduce(function (sum, value) {\n      return sum + value;\n    });\n  };\n  /* eslint-env browser */\n\n  /**\n   * get handle or return item\n   * @param {Array<HTMLElement>} items\n   * @param {string} selector\n   */\n\n\n  var getHandles = function getHandles(items, selector) {\n    if (!(items instanceof Array)) {\n      throw new Error('You must provide a Array of HTMLElements to be filtered.');\n    }\n\n    if (typeof selector !== 'string') {\n      return items;\n    }\n\n    return items // remove items without handle from array\n    .filter(function (item) {\n      return item.querySelector(selector) instanceof HTMLElement || item.shadowRoot && item.shadowRoot.querySelector(selector) instanceof HTMLElement;\n    }) // replace item with handle in array\n    .map(function (item) {\n      return item.querySelector(selector) || item.shadowRoot && item.shadowRoot.querySelector(selector);\n    });\n  };\n  /**\n   * @param {Event} event\n   * @returns {HTMLElement}\n   */\n\n\n  var getEventTarget = function getEventTarget(event) {\n    return event.composedPath && event.composedPath()[0] || event.target;\n  };\n  /* eslint-env browser */\n\n  /**\n   * defaultDragImage returns the current item as dragged image\n   * @param {HTMLElement} draggedElement - the item that the user drags\n   * @param {object} elementOffset - an object with the offsets top, left, right & bottom\n   * @param {Event} event - the original drag event object\n   * @return {object} with element, posX and posY properties\n   */\n\n\n  var defaultDragImage = function defaultDragImage(draggedElement, elementOffset, event) {\n    return {\n      element: draggedElement,\n      posX: event.pageX - elementOffset.left,\n      posY: event.pageY - elementOffset.top\n    };\n  };\n  /**\n   * attaches an element as the drag image to an event\n   * @param {Event} event - the original drag event object\n   * @param {HTMLElement} draggedElement - the item that the user drags\n   * @param {Function} customDragImage - function to create a custom dragImage\n   * @return void\n   */\n\n\n  var setDragImage = function setDragImage(event, draggedElement, customDragImage) {\n    // check if event is provided\n    if (!(event instanceof Event)) {\n      throw new Error('setDragImage requires a DragEvent as the first argument.');\n    } // check if draggedElement is provided\n\n\n    if (!(draggedElement instanceof HTMLElement)) {\n      throw new Error('setDragImage requires the dragged element as the second argument.');\n    } // set default function of none provided\n\n\n    if (!customDragImage) {\n      customDragImage = defaultDragImage;\n    } // check if setDragImage method is available\n\n\n    if (event.dataTransfer && event.dataTransfer.setDragImage) {\n      // get the elements offset\n      var elementOffset = offset(draggedElement); // get the dragImage\n\n      var dragImage = customDragImage(draggedElement, elementOffset, event); // check if custom function returns correct values\n\n      if (!(dragImage.element instanceof HTMLElement) || typeof dragImage.posX !== 'number' || typeof dragImage.posY !== 'number') {\n        throw new Error('The customDragImage function you provided must return and object with the properties element[string], posX[integer], posY[integer].');\n      } // needs to be set for HTML5 drag & drop to work\n\n\n      event.dataTransfer.effectAllowed = 'copyMove'; // Firefox requires it to use the event target's id for the data\n\n      event.dataTransfer.setData('text/plain', getEventTarget(event).id); // set the drag image on the event\n\n      event.dataTransfer.setDragImage(dragImage.element, dragImage.posX, dragImage.posY);\n    }\n  };\n  /**\n   * Check if curList accepts items from destList\n   * @param {sortable} destination the container an item is move to\n   * @param {sortable} origin the container an item comes from\n   */\n\n\n  var listsConnected = function listsConnected(destination, origin) {\n    // check if valid sortable\n    if (destination.isSortable === true) {\n      var acceptFrom = store(destination).getConfig('acceptFrom'); // check if acceptFrom is valid\n\n      if (acceptFrom !== null && acceptFrom !== false && typeof acceptFrom !== 'string') {\n        throw new Error('HTML5Sortable: Wrong argument, \"acceptFrom\" must be \"null\", \"false\", or a valid selector string.');\n      }\n\n      if (acceptFrom !== null) {\n        return acceptFrom !== false && acceptFrom.split(',').filter(function (sel) {\n          return sel.length > 0 && origin.matches(sel);\n        }).length > 0;\n      } // drop in same list\n\n\n      if (destination === origin) {\n        return true;\n      } // check if lists are connected with connectWith\n\n\n      if (store(destination).getConfig('connectWith') !== undefined && store(destination).getConfig('connectWith') !== null) {\n        return store(destination).getConfig('connectWith') === store(origin).getConfig('connectWith');\n      }\n    }\n\n    return false;\n  };\n  /**\n   * default configurations\n   */\n\n\n  var defaultConfiguration = {\n    items: null,\n    // deprecated\n    connectWith: null,\n    // deprecated\n    disableIEFix: null,\n    acceptFrom: null,\n    copy: false,\n    placeholder: null,\n    placeholderClass: 'sortable-placeholder',\n    draggingClass: 'sortable-dragging',\n    hoverClass: false,\n    dropTargetContainerClass: false,\n    debounce: 0,\n    throttleTime: 100,\n    maxItems: 0,\n    itemSerializer: undefined,\n    containerSerializer: undefined,\n    customDragImage: null,\n    orientation: 'vertical'\n  };\n  /**\n   * make sure a function is only called once within the given amount of time\n   * @param {Function} fn the function to throttle\n   * @param {number} threshold time limit for throttling\n   */\n  // must use function to keep this context\n\n  function throttle(fn, threshold) {\n    var _this = this;\n\n    if (threshold === void 0) {\n      threshold = 250;\n    } // check function\n\n\n    if (typeof fn !== 'function') {\n      throw new Error('You must provide a function as the first argument for throttle.');\n    } // check threshold\n\n\n    if (typeof threshold !== 'number') {\n      throw new Error('You must provide a number as the second argument for throttle.');\n    }\n\n    var lastEventTimestamp = null;\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var now = Date.now();\n\n      if (lastEventTimestamp === null || now - lastEventTimestamp >= threshold) {\n        lastEventTimestamp = now;\n        fn.apply(_this, args);\n      }\n    };\n  }\n  /* eslint-env browser */\n\n  /**\n   * enable or disable hoverClass on mouseenter/leave if container Items\n   * @param {sortable} sortableContainer a valid sortableContainer\n   * @param {boolean} enable enable or disable event\n   */\n\n\n  var enableHoverClass = function enableHoverClass(sortableContainer, enable) {\n    if (typeof store(sortableContainer).getConfig('hoverClass') === 'string') {\n      var hoverClasses_1 = store(sortableContainer).getConfig('hoverClass').split(' '); // add class on hover\n\n      if (enable === true) {\n        addEventListener(sortableContainer, 'mousemove', throttle(function (event) {\n          // check of no mouse button was pressed when mousemove started == no drag\n          if (event.buttons === 0) {\n            filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n              var _a, _b;\n\n              if (item === event.target || item.contains(event.target)) {\n                (_a = item.classList).add.apply(_a, hoverClasses_1);\n              } else {\n                (_b = item.classList).remove.apply(_b, hoverClasses_1);\n              }\n            });\n          }\n        }, store(sortableContainer).getConfig('throttleTime'))); // remove class on leave\n\n        addEventListener(sortableContainer, 'mouseleave', function () {\n          filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n            var _a;\n\n            (_a = item.classList).remove.apply(_a, hoverClasses_1);\n          });\n        }); // remove events\n      } else {\n        removeEventListener(sortableContainer, 'mousemove');\n        removeEventListener(sortableContainer, 'mouseleave');\n      }\n    }\n  };\n  /* eslint-env browser */\n\n  /*\n   * variables global to the plugin\n   */\n\n\n  var dragging;\n  var draggingHeight;\n  var draggingWidth;\n  /*\n   * Keeps track of the initialy selected list, where 'dragstart' event was triggered\n   * It allows us to move the data in between individual Sortable List instances\n   */\n  // Origin List - data from before any item was changed\n\n  var originContainer;\n  var originIndex;\n  var originElementIndex;\n  var originItemsBeforeUpdate; // Previous Sortable Container - we dispatch as sortenter event when a\n  // dragged item enters a sortableContainer for the first time\n\n  var previousContainer; // Destination List - data from before any item was changed\n\n  var destinationItemsBeforeUpdate;\n  /**\n   * remove event handlers from items\n   * @param {Array|NodeList} items\n   */\n\n  var removeItemEvents = function removeItemEvents(items) {\n    removeEventListener(items, 'dragstart');\n    removeEventListener(items, 'dragend');\n    removeEventListener(items, 'dragover');\n    removeEventListener(items, 'dragenter');\n    removeEventListener(items, 'drop');\n    removeEventListener(items, 'mouseenter');\n    removeEventListener(items, 'mouseleave');\n  }; // Remove container events\n\n\n  var removeContainerEvents = function removeContainerEvents(originContainer, previousContainer) {\n    if (originContainer) {\n      removeEventListener(originContainer, 'dragleave');\n    }\n\n    if (previousContainer && previousContainer !== originContainer) {\n      removeEventListener(previousContainer, 'dragleave');\n    }\n  };\n  /**\n   * getDragging returns the current element to drag or\n   * a copy of the element.\n   * Is Copy Active for sortable\n   * @param {HTMLElement} draggedItem - the item that the user drags\n   * @param {HTMLElement} sortable a single sortable\n   */\n\n\n  var getDragging = function getDragging(draggedItem, sortable) {\n    var ditem = draggedItem;\n\n    if (store(sortable).getConfig('copy') === true) {\n      ditem = draggedItem.cloneNode(true);\n      addAttribute(ditem, 'aria-copied', 'true');\n      draggedItem.parentElement.appendChild(ditem);\n      ditem.style.display = 'none';\n      ditem.oldDisplay = draggedItem.style.display;\n    }\n\n    return ditem;\n  };\n  /**\n   * Remove data from sortable\n   * @param {HTMLElement} sortable a single sortable\n   */\n\n\n  var removeSortableData = function removeSortableData(sortable) {\n    removeData(sortable);\n    removeAttribute(sortable, 'aria-dropeffect');\n  };\n  /**\n   * Remove data from items\n   * @param {Array<HTMLElement>|HTMLElement} items\n   */\n\n\n  var removeItemData = function removeItemData(items) {\n    removeAttribute(items, 'aria-grabbed');\n    removeAttribute(items, 'aria-copied');\n    removeAttribute(items, 'draggable');\n    removeAttribute(items, 'role');\n  };\n  /**\n   * find sortable from element. travels up parent element until found or null.\n   * @param {HTMLElement} element a single sortable\n   * @param {Event} event - the current event. We need to pass it to be able to\n   * find Sortable whith shadowRoot (document fragment has no parent)\n   */\n\n\n  function findSortable(element, event) {\n    if (event.composedPath) {\n      return event.composedPath().find(function (el) {\n        return el.isSortable;\n      });\n    }\n\n    while (element.isSortable !== true) {\n      element = element.parentElement;\n    }\n\n    return element;\n  }\n  /**\n   * Dragging event is on the sortable element. finds the top child that\n   * contains the element.\n   * @param {HTMLElement} sortableElement a single sortable\n   * @param {HTMLElement} element is that being dragged\n   */\n\n\n  function findDragElement(sortableElement, element) {\n    var options = addData(sortableElement, 'opts');\n    var items = filter(sortableElement.children, options.items);\n    var itemlist = items.filter(function (ele) {\n      return ele.contains(element) || ele.shadowRoot && ele.shadowRoot.contains(element);\n    });\n    return itemlist.length > 0 ? itemlist[0] : element;\n  }\n  /**\n   * Destroy the sortable\n   * @param {HTMLElement} sortableElement a single sortable\n   */\n\n\n  var destroySortable = function destroySortable(sortableElement) {\n    var opts = addData(sortableElement, 'opts') || {};\n    var items = filter(sortableElement.children, opts.items);\n    var handles = getHandles(items, opts.handle); // disable adding hover class\n\n    enableHoverClass(sortableElement, false); // remove event handlers & data from sortable\n\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'dragstart');\n    removeEventListener(sortableElement, 'dragend');\n    removeEventListener(sortableElement, 'drop'); // remove event data from sortable\n\n    removeSortableData(sortableElement); // remove event handlers & data from items\n\n    removeEventListener(handles, 'mousedown');\n    removeItemEvents(items);\n    removeItemData(items);\n    removeContainerEvents(originContainer, previousContainer); // clear sortable flag\n\n    sortableElement.isSortable = false;\n  };\n  /**\n   * Enable the sortable\n   * @param {HTMLElement} sortableElement a single sortable\n   */\n\n\n  var enableSortable = function enableSortable(sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = filter(sortableElement.children, opts.items);\n    var handles = getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'move');\n    addData(sortableElement, '_disabled', 'false');\n    addAttribute(handles, 'draggable', 'true'); // enable hover class\n\n    enableHoverClass(sortableElement, true); // @todo: remove this fix\n    // IE FIX for ghost\n    // can be disabled as it has the side effect that other events\n    // (e.g. click) will be ignored\n\n    if (opts.disableIEFix === false) {\n      var spanEl = (document || window.document).createElement('span');\n\n      if (typeof spanEl.dragDrop === 'function') {\n        addEventListener(handles, 'mousedown', function () {\n          if (items.indexOf(this) !== -1) {\n            this.dragDrop();\n          } else {\n            var parent = this.parentElement;\n\n            while (items.indexOf(parent) === -1) {\n              parent = parent.parentElement;\n            }\n\n            parent.dragDrop();\n          }\n        });\n      }\n    }\n  };\n  /**\n   * Disable the sortable\n   * @param {HTMLElement} sortableElement a single sortable\n   */\n\n\n  var disableSortable = function disableSortable(sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = filter(sortableElement.children, opts.items);\n    var handles = getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'none');\n    addData(sortableElement, '_disabled', 'true');\n    addAttribute(handles, 'draggable', 'false');\n    removeEventListener(handles, 'mousedown');\n    enableHoverClass(sortableElement, false);\n  };\n  /**\n   * Reload the sortable\n   * @param {HTMLElement} sortableElement a single sortable\n   * @description events need to be removed to not be double bound\n   */\n\n\n  var reloadSortable = function reloadSortable(sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = filter(sortableElement.children, opts.items);\n    var handles = getHandles(items, opts.handle);\n    addData(sortableElement, '_disabled', 'false'); // remove event handlers from items\n\n    removeItemEvents(items);\n    removeContainerEvents(originContainer, previousContainer);\n    removeEventListener(handles, 'mousedown'); // remove event handlers from sortable\n\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'drop');\n  };\n  /**\n   * Public sortable object\n   * @param {Array|NodeList} sortableElements\n   * @param {object|string} options|method\n   */\n\n\n  function sortable(sortableElements, options) {\n    // get method string to see if a method is called\n    var method = String(options);\n    options = options || {}; // check if the user provided a selector instead of an element\n\n    if (typeof sortableElements === 'string') {\n      sortableElements = document.querySelectorAll(sortableElements);\n    } // if the user provided an element, return it in an array to keep the return value consistant\n\n\n    if (sortableElements instanceof HTMLElement) {\n      sortableElements = [sortableElements];\n    }\n\n    sortableElements = Array.prototype.slice.call(sortableElements);\n\n    if (/serialize/.test(method)) {\n      return sortableElements.map(function (sortableContainer) {\n        var opts = addData(sortableContainer, 'opts');\n        return serialize(sortableContainer, opts.itemSerializer, opts.containerSerializer);\n      });\n    }\n\n    sortableElements.forEach(function (sortableElement) {\n      if (/enable|disable|destroy/.test(method)) {\n        return sortable[method](sortableElement);\n      } // log deprecation\n\n\n      ['connectWith', 'disableIEFix'].forEach(function (configKey) {\n        if (Object.prototype.hasOwnProperty.call(options, configKey) && options[configKey] !== null) {\n          console.warn(\"HTML5Sortable: You are using the deprecated configuration \\\"\" + configKey + \"\\\". This will be removed in an upcoming version, make sure to migrate to the new options when updating.\");\n        }\n      }); // merge options with default options\n\n      options = Object.assign({}, defaultConfiguration, store(sortableElement).config, options); // init data store for sortable\n\n      store(sortableElement).config = options; // set options on sortable\n\n      addData(sortableElement, 'opts', options); // property to define as sortable\n\n      sortableElement.isSortable = true; // reset sortable\n\n      reloadSortable(sortableElement); // initialize\n\n      var listItems = filter(sortableElement.children, options.items); // create element if user defined a placeholder element as a string\n\n      var customPlaceholder;\n\n      if (options.placeholder !== null && options.placeholder !== undefined) {\n        var tempContainer = document.createElement(sortableElement.tagName);\n\n        if (options.placeholder instanceof HTMLElement) {\n          tempContainer.appendChild(options.placeholder);\n        } else {\n          tempContainer.innerHTML = options.placeholder;\n        }\n\n        customPlaceholder = tempContainer.children[0];\n      } // add placeholder\n\n\n      store(sortableElement).placeholder = makePlaceholder(sortableElement, customPlaceholder, options.placeholderClass);\n      addData(sortableElement, 'items', options.items);\n\n      if (options.acceptFrom) {\n        addData(sortableElement, 'acceptFrom', options.acceptFrom);\n      } else if (options.connectWith) {\n        addData(sortableElement, 'connectWith', options.connectWith);\n      }\n\n      enableSortable(sortableElement);\n      addAttribute(listItems, 'role', 'option');\n      addAttribute(listItems, 'aria-grabbed', 'false');\n      /*\n       Handle drag events on draggable items\n       Handle is set at the sortableElement level as it will bubble up\n       from the item\n       */\n\n      addEventListener(sortableElement, 'dragstart', function (e) {\n        // ignore dragstart events\n        var target = getEventTarget(e);\n\n        if (target.isSortable === true) {\n          return;\n        }\n\n        e.stopImmediatePropagation();\n\n        if (options.handle && !target.matches(options.handle) || target.getAttribute('draggable') === 'false') {\n          return;\n        }\n\n        var sortableContainer = findSortable(target, e);\n        var dragItem = findDragElement(sortableContainer, target); // grab values\n\n        originItemsBeforeUpdate = filter(sortableContainer.children, options.items);\n        originIndex = originItemsBeforeUpdate.indexOf(dragItem);\n        originElementIndex = getIndex(dragItem, sortableContainer.children);\n        originContainer = sortableContainer; // add transparent clone or other ghost to cursor\n\n        setDragImage(e, dragItem, options.customDragImage); // cache selsection & add attr for dragging\n\n        draggingHeight = getElementHeight(dragItem);\n        draggingWidth = getElementWidth(dragItem);\n        dragItem.classList.add(options.draggingClass);\n        dragging = getDragging(dragItem, sortableContainer);\n        addAttribute(dragging, 'aria-grabbed', 'true'); // dispatch sortstart event on each element in group\n\n        sortableContainer.dispatchEvent(new CustomEvent('sortstart', {\n          detail: {\n            origin: {\n              elementIndex: originElementIndex,\n              index: originIndex,\n              container: originContainer\n            },\n            item: dragging,\n            originalTarget: target\n          }\n        }));\n      });\n      /*\n       We are capturing targetSortable before modifications with 'dragenter' event\n      */\n\n      addEventListener(sortableElement, 'dragenter', function (e) {\n        var target = getEventTarget(e);\n        var sortableContainer = findSortable(target, e);\n\n        if (sortableContainer && sortableContainer !== previousContainer) {\n          destinationItemsBeforeUpdate = filter(sortableContainer.children, addData(sortableContainer, 'items')).filter(function (item) {\n            return item !== store(sortableElement).placeholder;\n          });\n\n          if (options.dropTargetContainerClass) {\n            sortableContainer.classList.add(options.dropTargetContainerClass);\n          }\n\n          sortableContainer.dispatchEvent(new CustomEvent('sortenter', {\n            detail: {\n              origin: {\n                elementIndex: originElementIndex,\n                index: originIndex,\n                container: originContainer\n              },\n              destination: {\n                container: sortableContainer,\n                itemsBeforeUpdate: destinationItemsBeforeUpdate\n              },\n              item: dragging,\n              originalTarget: target\n            }\n          }));\n          addEventListener(sortableContainer, 'dragleave', function (e) {\n            // TODO: rename outTarget to be more self-explanatory\n            // e.fromElement for very old browsers, similar to relatedTarget\n            var outTarget = e.relatedTarget || e.fromElement;\n\n            if (!e.currentTarget.contains(outTarget)) {\n              if (options.dropTargetContainerClass) {\n                sortableContainer.classList.remove(options.dropTargetContainerClass);\n              }\n\n              sortableContainer.dispatchEvent(new CustomEvent('sortleave', {\n                detail: {\n                  origin: {\n                    elementIndex: originElementIndex,\n                    index: originIndex,\n                    container: sortableContainer\n                  },\n                  item: dragging,\n                  originalTarget: target\n                }\n              }));\n            }\n          });\n        }\n\n        previousContainer = sortableContainer;\n      });\n      /*\n       * Dragend Event - https://developer.mozilla.org/en-US/docs/Web/Events/dragend\n       * Fires each time dragEvent end, or ESC pressed\n       * We are using it to clean up any draggable elements and placeholders\n       */\n\n      addEventListener(sortableElement, 'dragend', function (e) {\n        if (!dragging) {\n          return;\n        }\n\n        dragging.classList.remove(options.draggingClass);\n        addAttribute(dragging, 'aria-grabbed', 'false');\n\n        if (dragging.getAttribute('aria-copied') === 'true' && addData(dragging, 'dropped') !== 'true') {\n          dragging.remove();\n        }\n\n        if (dragging.oldDisplay !== undefined) {\n          dragging.style.display = dragging.oldDisplay;\n          delete dragging.oldDisplay;\n        }\n\n        var visiblePlaceholder = Array.from(stores.values()).map(function (data) {\n          return data.placeholder;\n        }).filter(function (placeholder) {\n          return placeholder instanceof HTMLElement;\n        }).filter(isInDom)[0];\n\n        if (visiblePlaceholder) {\n          visiblePlaceholder.remove();\n        } // dispatch sortstart event on each element in group\n\n\n        sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n          detail: {\n            origin: {\n              elementIndex: originElementIndex,\n              index: originIndex,\n              container: originContainer\n            },\n            item: dragging\n          }\n        }));\n        previousContainer = null;\n        dragging = null;\n        draggingHeight = null;\n        draggingWidth = null;\n      });\n      /*\n       * Drop Event - https://developer.mozilla.org/en-US/docs/Web/Events/drop\n       * Fires when valid drop target area is hit\n       */\n\n      addEventListener(sortableElement, 'drop', function (e) {\n        if (!listsConnected(sortableElement, dragging.parentElement)) {\n          return;\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n        addData(dragging, 'dropped', 'true'); // get the one placeholder that is currently visible\n\n        var visiblePlaceholder = Array.from(stores.values()).map(function (data) {\n          return data.placeholder;\n        }) // filter only HTMLElements\n        .filter(function (placeholder) {\n          return placeholder instanceof HTMLElement;\n        }) // only elements in DOM\n        .filter(isInDom)[0];\n\n        if (visiblePlaceholder) {\n          visiblePlaceholder.replaceWith(dragging); // to avoid flickering restoring element display immediately after replacing placeholder\n\n          if (dragging.oldDisplay !== undefined) {\n            dragging.style.display = dragging.oldDisplay;\n            delete dragging.oldDisplay;\n          }\n        } else {\n          // set the dropped value to 'false' to delete copied dragging at the time of 'dragend'\n          addData(dragging, 'dropped', 'false');\n          return;\n        }\n        /*\n         * Fires Custom Event - 'sortstop'\n         */\n\n\n        sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n          detail: {\n            origin: {\n              elementIndex: originElementIndex,\n              index: originIndex,\n              container: originContainer\n            },\n            item: dragging\n          }\n        }));\n        var placeholder = store(sortableElement).placeholder;\n        var originItems = filter(originContainer.children, options.items).filter(function (item) {\n          return item !== placeholder;\n        });\n        var destinationContainer = this.isSortable === true ? this : this.parentElement;\n        var destinationItems = filter(destinationContainer.children, addData(destinationContainer, 'items')).filter(function (item) {\n          return item !== placeholder;\n        });\n        var destinationElementIndex = getIndex(dragging, Array.from(dragging.parentElement.children).filter(function (item) {\n          return item !== placeholder;\n        }));\n        var destinationIndex = getIndex(dragging, destinationItems);\n\n        if (options.dropTargetContainerClass) {\n          destinationContainer.classList.remove(options.dropTargetContainerClass);\n        }\n        /*\n         * When a list item changed container lists or index within a list\n         * Fires Custom Event - 'sortupdate'\n         */\n\n\n        if (originElementIndex !== destinationElementIndex || originContainer !== destinationContainer) {\n          sortableElement.dispatchEvent(new CustomEvent('sortupdate', {\n            detail: {\n              origin: {\n                elementIndex: originElementIndex,\n                index: originIndex,\n                container: originContainer,\n                itemsBeforeUpdate: originItemsBeforeUpdate,\n                items: originItems\n              },\n              destination: {\n                index: destinationIndex,\n                elementIndex: destinationElementIndex,\n                container: destinationContainer,\n                itemsBeforeUpdate: destinationItemsBeforeUpdate,\n                items: destinationItems\n              },\n              item: dragging\n            }\n          }));\n        }\n      });\n      var debouncedDragOverEnter = debounce(function (sortableElement, element, pageX, pageY) {\n        if (!dragging) {\n          return;\n        } // set placeholder height if forcePlaceholderSize option is set\n\n\n        if (options.forcePlaceholderSize) {\n          store(sortableElement).placeholder.style.height = draggingHeight + 'px';\n          store(sortableElement).placeholder.style.width = draggingWidth + 'px';\n        } // if element the draggedItem is dragged onto is within the array of all elements in list\n        // (not only items, but also disabled, etc.)\n\n\n        if (Array.from(sortableElement.children).indexOf(element) > -1) {\n          var thisHeight = getElementHeight(element);\n          var thisWidth = getElementWidth(element);\n          var placeholderIndex = getIndex(store(sortableElement).placeholder, element.parentElement.children);\n          var thisIndex = getIndex(element, element.parentElement.children); // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n\n          if (thisHeight > draggingHeight || thisWidth > draggingWidth) {\n            // Dead zone?\n            var deadZoneVertical = thisHeight - draggingHeight;\n            var deadZoneHorizontal = thisWidth - draggingWidth;\n            var offsetTop = offset(element).top;\n            var offsetLeft = offset(element).left;\n\n            if (placeholderIndex < thisIndex && (options.orientation === 'vertical' && pageY < offsetTop || options.orientation === 'horizontal' && pageX < offsetLeft)) {\n              return;\n            }\n\n            if (placeholderIndex > thisIndex && (options.orientation === 'vertical' && pageY > offsetTop + thisHeight - deadZoneVertical || options.orientation === 'horizontal' && pageX > offsetLeft + thisWidth - deadZoneHorizontal)) {\n              return;\n            }\n          }\n\n          if (dragging.oldDisplay === undefined) {\n            dragging.oldDisplay = dragging.style.display;\n          }\n\n          if (dragging.style.display !== 'none') {\n            dragging.style.display = 'none';\n          } // To avoid flicker, determine where to position the placeholder\n          // based on where the mouse pointer is relative to the elements\n          // vertical center.\n\n\n          var placeAfter = false;\n\n          try {\n            var elementMiddleVertical = offset(element).top + element.offsetHeight / 2;\n            var elementMiddleHorizontal = offset(element).left + element.offsetWidth / 2;\n            placeAfter = options.orientation === 'vertical' && pageY >= elementMiddleVertical || options.orientation === 'horizontal' && pageX >= elementMiddleHorizontal;\n          } catch (e) {\n            placeAfter = placeholderIndex < thisIndex;\n          }\n\n          if (placeAfter) {\n            insertAfter(element, store(sortableElement).placeholder);\n          } else {\n            insertBefore(element, store(sortableElement).placeholder);\n          } // get placeholders from all stores & remove all but current one\n\n\n          Array.from(stores.values()) // remove empty values\n          .filter(function (data) {\n            return data.placeholder !== undefined;\n          }) // foreach placeholder in array if outside of current sorableContainer -> remove from DOM\n          .forEach(function (data) {\n            if (data.placeholder !== store(sortableElement).placeholder) {\n              data.placeholder.remove();\n            }\n          });\n        } else {\n          // get all placeholders from store\n          var placeholders = Array.from(stores.values()).filter(function (data) {\n            return data.placeholder !== undefined;\n          }).map(function (data) {\n            return data.placeholder;\n          }); // check if element is not in placeholders\n\n          if (placeholders.indexOf(element) === -1 && sortableElement === element && !filter(element.children, options.items).length) {\n            placeholders.forEach(function (element) {\n              return element.remove();\n            });\n            element.appendChild(store(sortableElement).placeholder);\n          }\n        }\n      }, options.debounce); // Handle dragover and dragenter events on draggable items\n\n      var onDragOverEnter = function onDragOverEnter(e) {\n        var element = e.target;\n        var sortableElement = element.isSortable === true ? element : findSortable(element, e);\n        element = findDragElement(sortableElement, element);\n\n        if (!dragging || !listsConnected(sortableElement, dragging.parentElement) || addData(sortableElement, '_disabled') === 'true') {\n          return;\n        }\n\n        var options = addData(sortableElement, 'opts');\n\n        if (parseInt(options.maxItems) && filter(sortableElement.children, addData(sortableElement, 'items')).length > parseInt(options.maxItems) && dragging.parentElement !== sortableElement) {\n          return;\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n        e.dataTransfer.dropEffect = store(sortableElement).getConfig('copy') === true ? 'copy' : 'move';\n        debouncedDragOverEnter(sortableElement, element, e.pageX, e.pageY);\n      };\n\n      addEventListener(listItems.concat(sortableElement), 'dragover', onDragOverEnter);\n      addEventListener(listItems.concat(sortableElement), 'dragenter', onDragOverEnter);\n    });\n    return sortableElements;\n  }\n\n  sortable.destroy = function (sortableElement) {\n    destroySortable(sortableElement);\n  };\n\n  sortable.enable = function (sortableElement) {\n    enableSortable(sortableElement);\n  };\n\n  sortable.disable = function (sortableElement) {\n    disableSortable(sortableElement);\n  };\n  /* START.TESTS_ONLY */\n\n\n  sortable.__testing = {\n    // add internal methods here for testing purposes\n    data: addData,\n    removeItemEvents: removeItemEvents,\n    removeItemData: removeItemData,\n    removeSortableData: removeSortableData,\n    removeContainerEvents: removeContainerEvents\n  };\n  return sortable;\n}();","map":{"version":3,"names":["alert","sortable","addData","element","key","value","undefined","h5s","data","removeData","filter","nodes","selector","NodeList","HTMLCollection","Array","Error","from","item","nodeType","matches","stores","Map","Store","_config","_placeholder","_data","Object","defineProperty","prototype","get","config","forEach","set","mergedConfig","assign","entries","enumerable","configurable","setConfig","has","getConfig","placeholder","HTMLElement","setData","getData","deleteData","store","sortableElement","addEventListener","eventName","callback","i","length","removeEventListener","addAttribute","attribute","setAttribute","removeAttribute","offset","parentElement","getClientRects","rect","left","window","pageXOffset","right","top","pageYOffset","bottom","debounce","func","wait","timeout","args","_i","arguments","clearTimeout","setTimeout","apply","getIndex","elementList","indexOf","isInDom","parentNode","insertNode","referenceNode","newElement","position","insertBefore","nextElementSibling","target","insertAfter","serialize","sortableContainer","customItemSerializer","customContainerSerializer","serializedItem","serializedContainer","isSortable","options","items","children","serializedItems","map","parent","node","html","outerHTML","index","container","itemCount","makePlaceholder","placeholderClass","_a","includes","tagName","document","createElement","innerHTML","classList","add","split","getElementHeight","style","getComputedStyle","getPropertyValue","parseInt","int","isNaN","reduce","sum","getElementWidth","getHandles","querySelector","shadowRoot","getEventTarget","event","composedPath","defaultDragImage","draggedElement","elementOffset","posX","pageX","posY","pageY","setDragImage","customDragImage","Event","dataTransfer","dragImage","effectAllowed","id","listsConnected","destination","origin","acceptFrom","sel","defaultConfiguration","connectWith","disableIEFix","copy","draggingClass","hoverClass","dropTargetContainerClass","throttleTime","maxItems","itemSerializer","containerSerializer","orientation","throttle","fn","threshold","_this","lastEventTimestamp","now","Date","enableHoverClass","enable","hoverClasses_1","buttons","_b","contains","remove","dragging","draggingHeight","draggingWidth","originContainer","originIndex","originElementIndex","originItemsBeforeUpdate","previousContainer","destinationItemsBeforeUpdate","removeItemEvents","removeContainerEvents","getDragging","draggedItem","ditem","cloneNode","appendChild","display","oldDisplay","removeSortableData","removeItemData","findSortable","find","el","findDragElement","itemlist","ele","destroySortable","opts","handles","handle","enableSortable","spanEl","dragDrop","disableSortable","reloadSortable","sortableElements","method","String","querySelectorAll","slice","call","test","configKey","hasOwnProperty","console","warn","listItems","customPlaceholder","tempContainer","e","stopImmediatePropagation","getAttribute","dragItem","dispatchEvent","CustomEvent","detail","elementIndex","originalTarget","itemsBeforeUpdate","outTarget","relatedTarget","fromElement","currentTarget","visiblePlaceholder","values","preventDefault","stopPropagation","replaceWith","originItems","destinationContainer","destinationItems","destinationElementIndex","destinationIndex","debouncedDragOverEnter","forcePlaceholderSize","height","width","thisHeight","thisWidth","placeholderIndex","thisIndex","deadZoneVertical","deadZoneHorizontal","offsetTop","offsetLeft","placeAfter","elementMiddleVertical","offsetHeight","elementMiddleHorizontal","offsetWidth","placeholders","onDragOverEnter","dropEffect","concat","destroy","disable","__testing"],"sources":["/var/www/html/rails/DevcampPortfolio1/app/javascript/packs/html.sortble.js"],"sourcesContent":["alert(\"hello\");\n/*\n * HTML5Sortable package\n * https://github.com/lukasoppermann/html5sortable\n *\n * Maintained by Lukas Oppermann <lukas@vea.re>\n *\n * Released under the MIT license.\n */\nvar sortable = (function () {\n  'use strict';\n\n  /**\n   * Get or set data on element\n   * @param {HTMLElement} element\n   * @param {string} key\n   * @param {any} value\n   * @return {*}\n   */\n  function addData(element, key, value) {\n      if (value === undefined) {\n          return element && element.h5s && element.h5s.data && element.h5s.data[key];\n      }\n      else {\n          element.h5s = element.h5s || {};\n          element.h5s.data = element.h5s.data || {};\n          element.h5s.data[key] = value;\n      }\n  }\n  /**\n   * Remove data from element\n   * @param {HTMLElement} element\n   */\n  function removeData(element) {\n      if (element.h5s) {\n          delete element.h5s.data;\n      }\n  }\n\n  /* eslint-env browser */\n  /**\n   * Filter only wanted nodes\n   * @param {NodeList|HTMLCollection|Array} nodes\n   * @param {String} selector\n   * @returns {Array}\n   */\n  var filter = (function (nodes, selector) {\n      if (!(nodes instanceof NodeList || nodes instanceof HTMLCollection || nodes instanceof Array)) {\n          throw new Error('You must provide a nodeList/HTMLCollection/Array of elements to be filtered.');\n      }\n      if (typeof selector !== 'string') {\n          return Array.from(nodes);\n      }\n      return Array.from(nodes).filter(function (item) { return item.nodeType === 1 && item.matches(selector); });\n  });\n\n  /* eslint-env browser */\n  /* eslint-disable no-use-before-define */\n  var stores = new Map();\n  /* eslint-enable no-use-before-define */\n  /**\n   * Stores data & configurations per Sortable\n   * @param {Object} config\n   */\n  var Store = /** @class */ (function () {\n      function Store() {\n          this._config = new Map(); // eslint-disable-line no-undef\n          this._placeholder = undefined; // eslint-disable-line no-undef\n          this._data = new Map(); // eslint-disable-line no-undef\n      }\n      Object.defineProperty(Store.prototype, \"config\", {\n          /**\n           * get the configuration map of a class instance\n           * @method config\n           * @return {object}\n           */\n          get: function () {\n              // transform Map to object\n              var config = {};\n              this._config.forEach(function (value, key) {\n                  config[key] = value;\n              });\n              // return object\n              return config;\n          },\n          /**\n           * set the configuration of a class instance\n           * @method config\n           * @param {object} config object of configurations\n           */\n          set: function (config) {\n              if (typeof config !== 'object') {\n                  throw new Error('You must provide a valid configuration object to the config setter.');\n              }\n              // combine config with default\n              var mergedConfig = Object.assign({}, config);\n              // add config to map\n              this._config = new Map(Object.entries(mergedConfig));\n          },\n          enumerable: false,\n          configurable: true\n      });\n      /**\n       * set individual configuration of a class instance\n       * @method setConfig\n       * @param  key valid configuration key\n       * @param  value any value\n       * @return void\n       */\n      Store.prototype.setConfig = function (key, value) {\n          if (!this._config.has(key)) {\n              throw new Error(\"Trying to set invalid configuration item: \" + key);\n          }\n          // set config\n          this._config.set(key, value);\n      };\n      /**\n       * get an individual configuration of a class instance\n       * @method getConfig\n       * @param  key valid configuration key\n       * @return any configuration value\n       */\n      Store.prototype.getConfig = function (key) {\n          if (!this._config.has(key)) {\n              throw new Error(\"Invalid configuration item requested: \" + key);\n          }\n          return this._config.get(key);\n      };\n      Object.defineProperty(Store.prototype, \"placeholder\", {\n          /**\n           * get the placeholder for a class instance\n           * @method placeholder\n           * @return {HTMLElement|null}\n           */\n          get: function () {\n              return this._placeholder;\n          },\n          /**\n           * set the placeholder for a class instance\n           * @method placeholder\n           * @param {HTMLElement} placeholder\n           * @return {void}\n           */\n          set: function (placeholder) {\n              if (!(placeholder instanceof HTMLElement) && placeholder !== null) {\n                  throw new Error('A placeholder must be an html element or null.');\n              }\n              this._placeholder = placeholder;\n          },\n          enumerable: false,\n          configurable: true\n      });\n      /**\n       * set an data entry\n       * @method setData\n       * @param {string} key\n       * @param {any} value\n       * @return {void}\n       */\n      Store.prototype.setData = function (key, value) {\n          if (typeof key !== 'string') {\n              throw new Error('The key must be a string.');\n          }\n          this._data.set(key, value);\n      };\n      /**\n       * get an data entry\n       * @method getData\n       * @param {string} key an existing key\n       * @return {any}\n       */\n      Store.prototype.getData = function (key) {\n          if (typeof key !== 'string') {\n              throw new Error('The key must be a string.');\n          }\n          return this._data.get(key);\n      };\n      /**\n       * delete an data entry\n       * @method deleteData\n       * @param {string} key an existing key\n       * @return {boolean}\n       */\n      Store.prototype.deleteData = function (key) {\n          if (typeof key !== 'string') {\n              throw new Error('The key must be a string.');\n          }\n          return this._data.delete(key);\n      };\n      return Store;\n  }());\n  /**\n   * @param {HTMLElement} sortableElement\n   * @returns {Class: Store}\n   */\n  var store = (function (sortableElement) {\n      // if sortableElement is wrong type\n      if (!(sortableElement instanceof HTMLElement)) {\n          throw new Error('Please provide a sortable to the store function.');\n      }\n      // create new instance if not avilable\n      if (!stores.has(sortableElement)) {\n          stores.set(sortableElement, new Store());\n      }\n      // return instance\n      return stores.get(sortableElement);\n  });\n\n  /**\n   * @param {Array|HTMLElement} element\n   * @param {Function} callback\n   * @param {string} event\n   */\n  function addEventListener(element, eventName, callback) {\n      if (element instanceof Array) {\n          for (var i = 0; i < element.length; ++i) {\n              addEventListener(element[i], eventName, callback);\n          }\n          return;\n      }\n      element.addEventListener(eventName, callback);\n      store(element).setData(\"event\" + eventName, callback);\n  }\n  /**\n   * @param {Array<HTMLElement>|HTMLElement} element\n   * @param {string} eventName\n   */\n  function removeEventListener(element, eventName) {\n      if (element instanceof Array) {\n          for (var i = 0; i < element.length; ++i) {\n              removeEventListener(element[i], eventName);\n          }\n          return;\n      }\n      element.removeEventListener(eventName, store(element).getData(\"event\" + eventName));\n      store(element).deleteData(\"event\" + eventName);\n  }\n\n  /**\n   * @param {Array<HTMLElement>|HTMLElement} element\n   * @param {string} attribute\n   * @param {string} value\n   */\n  function addAttribute(element, attribute, value) {\n      if (element instanceof Array) {\n          for (var i = 0; i < element.length; ++i) {\n              addAttribute(element[i], attribute, value);\n          }\n          return;\n      }\n      element.setAttribute(attribute, value);\n  }\n  /**\n   * @param {Array|HTMLElement} element\n   * @param {string} attribute\n   */\n  function removeAttribute(element, attribute) {\n      if (element instanceof Array) {\n          for (var i = 0; i < element.length; ++i) {\n              removeAttribute(element[i], attribute);\n          }\n          return;\n      }\n      element.removeAttribute(attribute);\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @returns {Object}\n   */\n  var offset = (function (element) {\n      if (!element.parentElement || element.getClientRects().length === 0) {\n          throw new Error('target element must be part of the dom');\n      }\n      var rect = element.getClientRects()[0];\n      return {\n          left: rect.left + window.pageXOffset,\n          right: rect.right + window.pageXOffset,\n          top: rect.top + window.pageYOffset,\n          bottom: rect.bottom + window.pageYOffset\n      };\n  });\n\n  /**\n   * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n   * @param {Function} func to debounce\n   * @param {number} time to wait before calling function with latest arguments, 0 - no debounce\n   * @returns {function} - debounced function\n   */\n  var debounce = (function (func, wait) {\n      if (wait === void 0) { wait = 0; }\n      var timeout;\n      return function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n          }\n          clearTimeout(timeout);\n          timeout = setTimeout(function () {\n              func.apply(void 0, args);\n          }, wait);\n      };\n  });\n\n  /* eslint-env browser */\n  /**\n   * Get position of the element relatively to its sibling elements\n   * @param {HTMLElement} element\n   * @returns {number}\n   */\n  var getIndex = (function (element, elementList) {\n      if (!(element instanceof HTMLElement) || !(elementList instanceof NodeList || elementList instanceof HTMLCollection || elementList instanceof Array)) {\n          throw new Error('You must provide an element and a list of elements.');\n      }\n      return Array.from(elementList).indexOf(element);\n  });\n\n  /* eslint-env browser */\n  /**\n   * Test whether element is in DOM\n   * @param {HTMLElement} element\n   * @returns {boolean}\n   */\n  var isInDom = (function (element) {\n      if (!(element instanceof HTMLElement)) {\n          throw new Error('Element is not a node element.');\n      }\n      return element.parentNode !== null;\n  });\n\n  /* eslint-env browser */\n  /**\n   * Insert node before or after target\n   * @param {HTMLElement} referenceNode - reference element\n   * @param {HTMLElement} newElement - element to be inserted\n   * @param {String} position - insert before or after reference element\n   */\n  var insertNode = function (referenceNode, newElement, position) {\n      if (!(referenceNode instanceof HTMLElement) || !(referenceNode.parentElement instanceof HTMLElement)) {\n          throw new Error('target and element must be a node');\n      }\n      referenceNode.parentElement.insertBefore(newElement, (position === 'before' ? referenceNode : referenceNode.nextElementSibling));\n  };\n  /**\n   * Insert before target\n   * @param {HTMLElement} target\n   * @param {HTMLElement} element\n   */\n  var insertBefore = function (target, element) { return insertNode(target, element, 'before'); };\n  /**\n   * Insert after target\n   * @param {HTMLElement} target\n   * @param {HTMLElement} element\n   */\n  var insertAfter = function (target, element) { return insertNode(target, element, 'after'); };\n\n  /* eslint-env browser */\n  /**\n   * Filter only wanted nodes\n   * @param {HTMLElement} sortableContainer\n   * @param {Function} customSerializer\n   * @returns {Array}\n   */\n  var serialize = (function (sortableContainer, customItemSerializer, customContainerSerializer) {\n      if (customItemSerializer === void 0) { customItemSerializer = function (serializedItem, sortableContainer) { return serializedItem; }; }\n      if (customContainerSerializer === void 0) { customContainerSerializer = function (serializedContainer) { return serializedContainer; }; }\n      // check for valid sortableContainer\n      if (!(sortableContainer instanceof HTMLElement) || !sortableContainer.isSortable === true) {\n          throw new Error('You need to provide a sortableContainer to be serialized.');\n      }\n      // check for valid serializers\n      if (typeof customItemSerializer !== 'function' || typeof customContainerSerializer !== 'function') {\n          throw new Error('You need to provide a valid serializer for items and the container.');\n      }\n      // get options\n      var options = addData(sortableContainer, 'opts');\n      var item = options.items;\n      // serialize container\n      var items = filter(sortableContainer.children, item);\n      var serializedItems = items.map(function (item) {\n          return {\n              parent: sortableContainer,\n              node: item,\n              html: item.outerHTML,\n              index: getIndex(item, items)\n          };\n      });\n      // serialize container\n      var container = {\n          node: sortableContainer,\n          itemCount: serializedItems.length\n      };\n      return {\n          container: customContainerSerializer(container),\n          items: serializedItems.map(function (item) { return customItemSerializer(item, sortableContainer); })\n      };\n  });\n\n  /* eslint-env browser */\n  /**\n   * create a placeholder element\n   * @param {HTMLElement} sortableElement a single sortable\n   * @param {string|undefined} placeholder a string representing an html element\n   * @param {string} placeholderClasses a string representing the classes that should be added to the placeholder\n   */\n  var makePlaceholder = (function (sortableElement, placeholder, placeholderClass) {\n      var _a;\n      if (placeholderClass === void 0) { placeholderClass = 'sortable-placeholder'; }\n      if (!(sortableElement instanceof HTMLElement)) {\n          throw new Error('You must provide a valid element as a sortable.');\n      }\n      // if placeholder is not an element\n      if (!(placeholder instanceof HTMLElement) && placeholder !== undefined) {\n          throw new Error('You must provide a valid element as a placeholder or set ot to undefined.');\n      }\n      // if no placeholder element is given\n      if (placeholder === undefined) {\n          if (['UL', 'OL'].includes(sortableElement.tagName)) {\n              placeholder = document.createElement('li');\n          }\n          else if (['TABLE', 'TBODY'].includes(sortableElement.tagName)) {\n              placeholder = document.createElement('tr');\n              // set colspan to always all rows, otherwise the item can only be dropped in first column\n              placeholder.innerHTML = '<td colspan=\"100\"></td>';\n          }\n          else {\n              placeholder = document.createElement('div');\n          }\n      }\n      // add classes to placeholder\n      if (typeof placeholderClass === 'string') {\n          (_a = placeholder.classList).add.apply(_a, placeholderClass.split(' '));\n      }\n      return placeholder;\n  });\n\n  /* eslint-env browser */\n  /**\n   * Get height of an element including padding\n   * @param {HTMLElement} element an dom element\n   */\n  var getElementHeight = (function (element) {\n      if (!(element instanceof HTMLElement)) {\n          throw new Error('You must provide a valid dom element');\n      }\n      // get calculated style of element\n      var style = window.getComputedStyle(element);\n      // get only height if element has box-sizing: border-box specified\n      if (style.getPropertyValue('box-sizing') === 'border-box') {\n          return parseInt(style.getPropertyValue('height'), 10);\n      }\n      // pick applicable properties, convert to int and reduce by adding\n      return ['height', 'padding-top', 'padding-bottom']\n          .map(function (key) {\n          var int = parseInt(style.getPropertyValue(key), 10);\n          return isNaN(int) ? 0 : int;\n      })\n          .reduce(function (sum, value) { return sum + value; });\n  });\n\n  /* eslint-env browser */\n  /**\n   * Get width of an element including padding\n   * @param {HTMLElement} element an dom element\n   */\n  var getElementWidth = (function (element) {\n      if (!(element instanceof HTMLElement)) {\n          throw new Error('You must provide a valid dom element');\n      }\n      // get calculated style of element\n      var style = window.getComputedStyle(element);\n      // pick applicable properties, convert to int and reduce by adding\n      return ['width', 'padding-left', 'padding-right']\n          .map(function (key) {\n          var int = parseInt(style.getPropertyValue(key), 10);\n          return isNaN(int) ? 0 : int;\n      })\n          .reduce(function (sum, value) { return sum + value; });\n  });\n\n  /* eslint-env browser */\n  /**\n   * get handle or return item\n   * @param {Array<HTMLElement>} items\n   * @param {string} selector\n   */\n  var getHandles = (function (items, selector) {\n      if (!(items instanceof Array)) {\n          throw new Error('You must provide a Array of HTMLElements to be filtered.');\n      }\n      if (typeof selector !== 'string') {\n          return items;\n      }\n      return items\n          // remove items without handle from array\n          .filter(function (item) {\n          return item.querySelector(selector) instanceof HTMLElement ||\n              (item.shadowRoot && item.shadowRoot.querySelector(selector) instanceof HTMLElement);\n      })\n          // replace item with handle in array\n          .map(function (item) {\n          return item.querySelector(selector) || (item.shadowRoot && item.shadowRoot.querySelector(selector));\n      });\n  });\n\n  /**\n   * @param {Event} event\n   * @returns {HTMLElement}\n   */\n  var getEventTarget = (function (event) {\n      return (event.composedPath && event.composedPath()[0]) || event.target;\n  });\n\n  /* eslint-env browser */\n  /**\n   * defaultDragImage returns the current item as dragged image\n   * @param {HTMLElement} draggedElement - the item that the user drags\n   * @param {object} elementOffset - an object with the offsets top, left, right & bottom\n   * @param {Event} event - the original drag event object\n   * @return {object} with element, posX and posY properties\n   */\n  var defaultDragImage = function (draggedElement, elementOffset, event) {\n      return {\n          element: draggedElement,\n          posX: event.pageX - elementOffset.left,\n          posY: event.pageY - elementOffset.top\n      };\n  };\n  /**\n   * attaches an element as the drag image to an event\n   * @param {Event} event - the original drag event object\n   * @param {HTMLElement} draggedElement - the item that the user drags\n   * @param {Function} customDragImage - function to create a custom dragImage\n   * @return void\n   */\n  var setDragImage = (function (event, draggedElement, customDragImage) {\n      // check if event is provided\n      if (!(event instanceof Event)) {\n          throw new Error('setDragImage requires a DragEvent as the first argument.');\n      }\n      // check if draggedElement is provided\n      if (!(draggedElement instanceof HTMLElement)) {\n          throw new Error('setDragImage requires the dragged element as the second argument.');\n      }\n      // set default function of none provided\n      if (!customDragImage) {\n          customDragImage = defaultDragImage;\n      }\n      // check if setDragImage method is available\n      if (event.dataTransfer && event.dataTransfer.setDragImage) {\n          // get the elements offset\n          var elementOffset = offset(draggedElement);\n          // get the dragImage\n          var dragImage = customDragImage(draggedElement, elementOffset, event);\n          // check if custom function returns correct values\n          if (!(dragImage.element instanceof HTMLElement) || typeof dragImage.posX !== 'number' || typeof dragImage.posY !== 'number') {\n              throw new Error('The customDragImage function you provided must return and object with the properties element[string], posX[integer], posY[integer].');\n          }\n          // needs to be set for HTML5 drag & drop to work\n          event.dataTransfer.effectAllowed = 'copyMove';\n          // Firefox requires it to use the event target's id for the data\n          event.dataTransfer.setData('text/plain', getEventTarget(event).id);\n          // set the drag image on the event\n          event.dataTransfer.setDragImage(dragImage.element, dragImage.posX, dragImage.posY);\n      }\n  });\n\n  /**\n   * Check if curList accepts items from destList\n   * @param {sortable} destination the container an item is move to\n   * @param {sortable} origin the container an item comes from\n   */\n  var listsConnected = (function (destination, origin) {\n      // check if valid sortable\n      if (destination.isSortable === true) {\n          var acceptFrom = store(destination).getConfig('acceptFrom');\n          // check if acceptFrom is valid\n          if (acceptFrom !== null && acceptFrom !== false && typeof acceptFrom !== 'string') {\n              throw new Error('HTML5Sortable: Wrong argument, \"acceptFrom\" must be \"null\", \"false\", or a valid selector string.');\n          }\n          if (acceptFrom !== null) {\n              return acceptFrom !== false && acceptFrom.split(',').filter(function (sel) {\n                  return sel.length > 0 && origin.matches(sel);\n              }).length > 0;\n          }\n          // drop in same list\n          if (destination === origin) {\n              return true;\n          }\n          // check if lists are connected with connectWith\n          if (store(destination).getConfig('connectWith') !== undefined && store(destination).getConfig('connectWith') !== null) {\n              return store(destination).getConfig('connectWith') === store(origin).getConfig('connectWith');\n          }\n      }\n      return false;\n  });\n\n  /**\n   * default configurations\n   */\n  var defaultConfiguration = {\n      items: null,\n      // deprecated\n      connectWith: null,\n      // deprecated\n      disableIEFix: null,\n      acceptFrom: null,\n      copy: false,\n      placeholder: null,\n      placeholderClass: 'sortable-placeholder',\n      draggingClass: 'sortable-dragging',\n      hoverClass: false,\n      dropTargetContainerClass: false,\n      debounce: 0,\n      throttleTime: 100,\n      maxItems: 0,\n      itemSerializer: undefined,\n      containerSerializer: undefined,\n      customDragImage: null,\n      orientation: 'vertical'\n  };\n\n  /**\n   * make sure a function is only called once within the given amount of time\n   * @param {Function} fn the function to throttle\n   * @param {number} threshold time limit for throttling\n   */\n  // must use function to keep this context\n  function throttle (fn, threshold) {\n      var _this = this;\n      if (threshold === void 0) { threshold = 250; }\n      // check function\n      if (typeof fn !== 'function') {\n          throw new Error('You must provide a function as the first argument for throttle.');\n      }\n      // check threshold\n      if (typeof threshold !== 'number') {\n          throw new Error('You must provide a number as the second argument for throttle.');\n      }\n      var lastEventTimestamp = null;\n      return function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n          }\n          var now = Date.now();\n          if (lastEventTimestamp === null || now - lastEventTimestamp >= threshold) {\n              lastEventTimestamp = now;\n              fn.apply(_this, args);\n          }\n      };\n  }\n\n  /* eslint-env browser */\n  /**\n   * enable or disable hoverClass on mouseenter/leave if container Items\n   * @param {sortable} sortableContainer a valid sortableContainer\n   * @param {boolean} enable enable or disable event\n   */\n  var enableHoverClass = (function (sortableContainer, enable) {\n      if (typeof store(sortableContainer).getConfig('hoverClass') === 'string') {\n          var hoverClasses_1 = store(sortableContainer).getConfig('hoverClass').split(' ');\n          // add class on hover\n          if (enable === true) {\n              addEventListener(sortableContainer, 'mousemove', throttle(function (event) {\n                  // check of no mouse button was pressed when mousemove started == no drag\n                  if (event.buttons === 0) {\n                      filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                          var _a, _b;\n                          if (item === event.target || item.contains(event.target)) {\n                              (_a = item.classList).add.apply(_a, hoverClasses_1);\n                          }\n                          else {\n                              (_b = item.classList).remove.apply(_b, hoverClasses_1);\n                          }\n                      });\n                  }\n              }, store(sortableContainer).getConfig('throttleTime')));\n              // remove class on leave\n              addEventListener(sortableContainer, 'mouseleave', function () {\n                  filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                      var _a;\n                      (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                  });\n              });\n              // remove events\n          }\n          else {\n              removeEventListener(sortableContainer, 'mousemove');\n              removeEventListener(sortableContainer, 'mouseleave');\n          }\n      }\n  });\n\n  /* eslint-env browser */\n  /*\n   * variables global to the plugin\n   */\n  var dragging;\n  var draggingHeight;\n  var draggingWidth;\n  /*\n   * Keeps track of the initialy selected list, where 'dragstart' event was triggered\n   * It allows us to move the data in between individual Sortable List instances\n   */\n  // Origin List - data from before any item was changed\n  var originContainer;\n  var originIndex;\n  var originElementIndex;\n  var originItemsBeforeUpdate;\n  // Previous Sortable Container - we dispatch as sortenter event when a\n  // dragged item enters a sortableContainer for the first time\n  var previousContainer;\n  // Destination List - data from before any item was changed\n  var destinationItemsBeforeUpdate;\n  /**\n   * remove event handlers from items\n   * @param {Array|NodeList} items\n   */\n  var removeItemEvents = function (items) {\n      removeEventListener(items, 'dragstart');\n      removeEventListener(items, 'dragend');\n      removeEventListener(items, 'dragover');\n      removeEventListener(items, 'dragenter');\n      removeEventListener(items, 'drop');\n      removeEventListener(items, 'mouseenter');\n      removeEventListener(items, 'mouseleave');\n  };\n  // Remove container events\n  var removeContainerEvents = function (originContainer, previousContainer) {\n      if (originContainer) {\n          removeEventListener(originContainer, 'dragleave');\n      }\n      if (previousContainer && (previousContainer !== originContainer)) {\n          removeEventListener(previousContainer, 'dragleave');\n      }\n  };\n  /**\n   * getDragging returns the current element to drag or\n   * a copy of the element.\n   * Is Copy Active for sortable\n   * @param {HTMLElement} draggedItem - the item that the user drags\n   * @param {HTMLElement} sortable a single sortable\n   */\n  var getDragging = function (draggedItem, sortable) {\n      var ditem = draggedItem;\n      if (store(sortable).getConfig('copy') === true) {\n          ditem = draggedItem.cloneNode(true);\n          addAttribute(ditem, 'aria-copied', 'true');\n          draggedItem.parentElement.appendChild(ditem);\n          ditem.style.display = 'none';\n          ditem.oldDisplay = draggedItem.style.display;\n      }\n      return ditem;\n  };\n  /**\n   * Remove data from sortable\n   * @param {HTMLElement} sortable a single sortable\n   */\n  var removeSortableData = function (sortable) {\n      removeData(sortable);\n      removeAttribute(sortable, 'aria-dropeffect');\n  };\n  /**\n   * Remove data from items\n   * @param {Array<HTMLElement>|HTMLElement} items\n   */\n  var removeItemData = function (items) {\n      removeAttribute(items, 'aria-grabbed');\n      removeAttribute(items, 'aria-copied');\n      removeAttribute(items, 'draggable');\n      removeAttribute(items, 'role');\n  };\n  /**\n   * find sortable from element. travels up parent element until found or null.\n   * @param {HTMLElement} element a single sortable\n   * @param {Event} event - the current event. We need to pass it to be able to\n   * find Sortable whith shadowRoot (document fragment has no parent)\n   */\n  function findSortable(element, event) {\n      if (event.composedPath) {\n          return event.composedPath().find(function (el) { return el.isSortable; });\n      }\n      while (element.isSortable !== true) {\n          element = element.parentElement;\n      }\n      return element;\n  }\n  /**\n   * Dragging event is on the sortable element. finds the top child that\n   * contains the element.\n   * @param {HTMLElement} sortableElement a single sortable\n   * @param {HTMLElement} element is that being dragged\n   */\n  function findDragElement(sortableElement, element) {\n      var options = addData(sortableElement, 'opts');\n      var items = filter(sortableElement.children, options.items);\n      var itemlist = items.filter(function (ele) {\n          return ele.contains(element) || (ele.shadowRoot && ele.shadowRoot.contains(element));\n      });\n      return itemlist.length > 0 ? itemlist[0] : element;\n  }\n  /**\n   * Destroy the sortable\n   * @param {HTMLElement} sortableElement a single sortable\n   */\n  var destroySortable = function (sortableElement) {\n      var opts = addData(sortableElement, 'opts') || {};\n      var items = filter(sortableElement.children, opts.items);\n      var handles = getHandles(items, opts.handle);\n      // disable adding hover class\n      enableHoverClass(sortableElement, false);\n      // remove event handlers & data from sortable\n      removeEventListener(sortableElement, 'dragover');\n      removeEventListener(sortableElement, 'dragenter');\n      removeEventListener(sortableElement, 'dragstart');\n      removeEventListener(sortableElement, 'dragend');\n      removeEventListener(sortableElement, 'drop');\n      // remove event data from sortable\n      removeSortableData(sortableElement);\n      // remove event handlers & data from items\n      removeEventListener(handles, 'mousedown');\n      removeItemEvents(items);\n      removeItemData(items);\n      removeContainerEvents(originContainer, previousContainer);\n      // clear sortable flag\n      sortableElement.isSortable = false;\n  };\n  /**\n   * Enable the sortable\n   * @param {HTMLElement} sortableElement a single sortable\n   */\n  var enableSortable = function (sortableElement) {\n      var opts = addData(sortableElement, 'opts');\n      var items = filter(sortableElement.children, opts.items);\n      var handles = getHandles(items, opts.handle);\n      addAttribute(sortableElement, 'aria-dropeffect', 'move');\n      addData(sortableElement, '_disabled', 'false');\n      addAttribute(handles, 'draggable', 'true');\n      // enable hover class\n      enableHoverClass(sortableElement, true);\n      // @todo: remove this fix\n      // IE FIX for ghost\n      // can be disabled as it has the side effect that other events\n      // (e.g. click) will be ignored\n      if (opts.disableIEFix === false) {\n          var spanEl = (document || window.document).createElement('span');\n          if (typeof spanEl.dragDrop === 'function') {\n              addEventListener(handles, 'mousedown', function () {\n                  if (items.indexOf(this) !== -1) {\n                      this.dragDrop();\n                  }\n                  else {\n                      var parent = this.parentElement;\n                      while (items.indexOf(parent) === -1) {\n                          parent = parent.parentElement;\n                      }\n                      parent.dragDrop();\n                  }\n              });\n          }\n      }\n  };\n  /**\n   * Disable the sortable\n   * @param {HTMLElement} sortableElement a single sortable\n   */\n  var disableSortable = function (sortableElement) {\n      var opts = addData(sortableElement, 'opts');\n      var items = filter(sortableElement.children, opts.items);\n      var handles = getHandles(items, opts.handle);\n      addAttribute(sortableElement, 'aria-dropeffect', 'none');\n      addData(sortableElement, '_disabled', 'true');\n      addAttribute(handles, 'draggable', 'false');\n      removeEventListener(handles, 'mousedown');\n      enableHoverClass(sortableElement, false);\n  };\n  /**\n   * Reload the sortable\n   * @param {HTMLElement} sortableElement a single sortable\n   * @description events need to be removed to not be double bound\n   */\n  var reloadSortable = function (sortableElement) {\n      var opts = addData(sortableElement, 'opts');\n      var items = filter(sortableElement.children, opts.items);\n      var handles = getHandles(items, opts.handle);\n      addData(sortableElement, '_disabled', 'false');\n      // remove event handlers from items\n      removeItemEvents(items);\n      removeContainerEvents(originContainer, previousContainer);\n      removeEventListener(handles, 'mousedown');\n      // remove event handlers from sortable\n      removeEventListener(sortableElement, 'dragover');\n      removeEventListener(sortableElement, 'dragenter');\n      removeEventListener(sortableElement, 'drop');\n  };\n  /**\n   * Public sortable object\n   * @param {Array|NodeList} sortableElements\n   * @param {object|string} options|method\n   */\n  function sortable(sortableElements, options) {\n      // get method string to see if a method is called\n      var method = String(options);\n      options = options || {};\n      // check if the user provided a selector instead of an element\n      if (typeof sortableElements === 'string') {\n          sortableElements = document.querySelectorAll(sortableElements);\n      }\n      // if the user provided an element, return it in an array to keep the return value consistant\n      if (sortableElements instanceof HTMLElement) {\n          sortableElements = [sortableElements];\n      }\n      sortableElements = Array.prototype.slice.call(sortableElements);\n      if (/serialize/.test(method)) {\n          return sortableElements.map(function (sortableContainer) {\n              var opts = addData(sortableContainer, 'opts');\n              return serialize(sortableContainer, opts.itemSerializer, opts.containerSerializer);\n          });\n      }\n      sortableElements.forEach(function (sortableElement) {\n          if (/enable|disable|destroy/.test(method)) {\n              return sortable[method](sortableElement);\n          }\n          // log deprecation\n          ['connectWith', 'disableIEFix'].forEach(function (configKey) {\n              if (Object.prototype.hasOwnProperty.call(options, configKey) && options[configKey] !== null) {\n                  console.warn(\"HTML5Sortable: You are using the deprecated configuration \\\"\" + configKey + \"\\\". This will be removed in an upcoming version, make sure to migrate to the new options when updating.\");\n              }\n          });\n          // merge options with default options\n          options = Object.assign({}, defaultConfiguration, store(sortableElement).config, options);\n          // init data store for sortable\n          store(sortableElement).config = options;\n          // set options on sortable\n          addData(sortableElement, 'opts', options);\n          // property to define as sortable\n          sortableElement.isSortable = true;\n          // reset sortable\n          reloadSortable(sortableElement);\n          // initialize\n          var listItems = filter(sortableElement.children, options.items);\n          // create element if user defined a placeholder element as a string\n          var customPlaceholder;\n          if (options.placeholder !== null && options.placeholder !== undefined) {\n              var tempContainer = document.createElement(sortableElement.tagName);\n              if (options.placeholder instanceof HTMLElement) {\n                  tempContainer.appendChild(options.placeholder);\n              }\n              else {\n                  tempContainer.innerHTML = options.placeholder;\n              }\n              customPlaceholder = tempContainer.children[0];\n          }\n          // add placeholder\n          store(sortableElement).placeholder = makePlaceholder(sortableElement, customPlaceholder, options.placeholderClass);\n          addData(sortableElement, 'items', options.items);\n          if (options.acceptFrom) {\n              addData(sortableElement, 'acceptFrom', options.acceptFrom);\n          }\n          else if (options.connectWith) {\n              addData(sortableElement, 'connectWith', options.connectWith);\n          }\n          enableSortable(sortableElement);\n          addAttribute(listItems, 'role', 'option');\n          addAttribute(listItems, 'aria-grabbed', 'false');\n          /*\n           Handle drag events on draggable items\n           Handle is set at the sortableElement level as it will bubble up\n           from the item\n           */\n          addEventListener(sortableElement, 'dragstart', function (e) {\n              // ignore dragstart events\n              var target = getEventTarget(e);\n              if (target.isSortable === true) {\n                  return;\n              }\n              e.stopImmediatePropagation();\n              if ((options.handle && !target.matches(options.handle)) || target.getAttribute('draggable') === 'false') {\n                  return;\n              }\n              var sortableContainer = findSortable(target, e);\n              var dragItem = findDragElement(sortableContainer, target);\n              // grab values\n              originItemsBeforeUpdate = filter(sortableContainer.children, options.items);\n              originIndex = originItemsBeforeUpdate.indexOf(dragItem);\n              originElementIndex = getIndex(dragItem, sortableContainer.children);\n              originContainer = sortableContainer;\n              // add transparent clone or other ghost to cursor\n              setDragImage(e, dragItem, options.customDragImage);\n              // cache selsection & add attr for dragging\n              draggingHeight = getElementHeight(dragItem);\n              draggingWidth = getElementWidth(dragItem);\n              dragItem.classList.add(options.draggingClass);\n              dragging = getDragging(dragItem, sortableContainer);\n              addAttribute(dragging, 'aria-grabbed', 'true');\n              // dispatch sortstart event on each element in group\n              sortableContainer.dispatchEvent(new CustomEvent('sortstart', {\n                  detail: {\n                      origin: {\n                          elementIndex: originElementIndex,\n                          index: originIndex,\n                          container: originContainer\n                      },\n                      item: dragging,\n                      originalTarget: target\n                  }\n              }));\n          });\n          /*\n           We are capturing targetSortable before modifications with 'dragenter' event\n          */\n          addEventListener(sortableElement, 'dragenter', function (e) {\n              var target = getEventTarget(e);\n              var sortableContainer = findSortable(target, e);\n              if (sortableContainer && sortableContainer !== previousContainer) {\n                  destinationItemsBeforeUpdate = filter(sortableContainer.children, addData(sortableContainer, 'items'))\n                      .filter(function (item) { return item !== store(sortableElement).placeholder; });\n                  if (options.dropTargetContainerClass) {\n                      sortableContainer.classList.add(options.dropTargetContainerClass);\n                  }\n                  sortableContainer.dispatchEvent(new CustomEvent('sortenter', {\n                      detail: {\n                          origin: {\n                              elementIndex: originElementIndex,\n                              index: originIndex,\n                              container: originContainer\n                          },\n                          destination: {\n                              container: sortableContainer,\n                              itemsBeforeUpdate: destinationItemsBeforeUpdate\n                          },\n                          item: dragging,\n                          originalTarget: target\n                      }\n                  }));\n                  addEventListener(sortableContainer, 'dragleave', function (e) {\n                      // TODO: rename outTarget to be more self-explanatory\n                      // e.fromElement for very old browsers, similar to relatedTarget\n                      var outTarget = e.relatedTarget || e.fromElement;\n                      if (!e.currentTarget.contains(outTarget)) {\n                          if (options.dropTargetContainerClass) {\n                              sortableContainer.classList.remove(options.dropTargetContainerClass);\n                          }\n                          sortableContainer.dispatchEvent(new CustomEvent('sortleave', {\n                              detail: {\n                                  origin: {\n                                      elementIndex: originElementIndex,\n                                      index: originIndex,\n                                      container: sortableContainer\n                                  },\n                                  item: dragging,\n                                  originalTarget: target\n                              }\n                          }));\n                      }\n                  });\n              }\n              previousContainer = sortableContainer;\n          });\n          /*\n           * Dragend Event - https://developer.mozilla.org/en-US/docs/Web/Events/dragend\n           * Fires each time dragEvent end, or ESC pressed\n           * We are using it to clean up any draggable elements and placeholders\n           */\n          addEventListener(sortableElement, 'dragend', function (e) {\n              if (!dragging) {\n                  return;\n              }\n              dragging.classList.remove(options.draggingClass);\n              addAttribute(dragging, 'aria-grabbed', 'false');\n              if (dragging.getAttribute('aria-copied') === 'true' && addData(dragging, 'dropped') !== 'true') {\n                  dragging.remove();\n              }\n              if (dragging.oldDisplay !== undefined) {\n                  dragging.style.display = dragging.oldDisplay;\n                  delete dragging.oldDisplay;\n              }\n              var visiblePlaceholder = Array.from(stores.values()).map(function (data) { return data.placeholder; })\n                  .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                  .filter(isInDom)[0];\n              if (visiblePlaceholder) {\n                  visiblePlaceholder.remove();\n              }\n              // dispatch sortstart event on each element in group\n              sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                  detail: {\n                      origin: {\n                          elementIndex: originElementIndex,\n                          index: originIndex,\n                          container: originContainer\n                      },\n                      item: dragging\n                  }\n              }));\n              previousContainer = null;\n              dragging = null;\n              draggingHeight = null;\n              draggingWidth = null;\n          });\n          /*\n           * Drop Event - https://developer.mozilla.org/en-US/docs/Web/Events/drop\n           * Fires when valid drop target area is hit\n           */\n          addEventListener(sortableElement, 'drop', function (e) {\n              if (!listsConnected(sortableElement, dragging.parentElement)) {\n                  return;\n              }\n              e.preventDefault();\n              e.stopPropagation();\n              addData(dragging, 'dropped', 'true');\n              // get the one placeholder that is currently visible\n              var visiblePlaceholder = Array.from(stores.values()).map(function (data) {\n                  return data.placeholder;\n              })\n                  // filter only HTMLElements\n                  .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                  // only elements in DOM\n                  .filter(isInDom)[0];\n              if (visiblePlaceholder) {\n                  visiblePlaceholder.replaceWith(dragging);\n                  // to avoid flickering restoring element display immediately after replacing placeholder\n                  if (dragging.oldDisplay !== undefined) {\n                      dragging.style.display = dragging.oldDisplay;\n                      delete dragging.oldDisplay;\n                  }\n              }\n              else {\n                  // set the dropped value to 'false' to delete copied dragging at the time of 'dragend'\n                  addData(dragging, 'dropped', 'false');\n                  return;\n              }\n              /*\n               * Fires Custom Event - 'sortstop'\n               */\n              sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                  detail: {\n                      origin: {\n                          elementIndex: originElementIndex,\n                          index: originIndex,\n                          container: originContainer\n                      },\n                      item: dragging\n                  }\n              }));\n              var placeholder = store(sortableElement).placeholder;\n              var originItems = filter(originContainer.children, options.items)\n                  .filter(function (item) { return item !== placeholder; });\n              var destinationContainer = this.isSortable === true ? this : this.parentElement;\n              var destinationItems = filter(destinationContainer.children, addData(destinationContainer, 'items'))\n                  .filter(function (item) { return item !== placeholder; });\n              var destinationElementIndex = getIndex(dragging, Array.from(dragging.parentElement.children)\n                  .filter(function (item) { return item !== placeholder; }));\n              var destinationIndex = getIndex(dragging, destinationItems);\n              if (options.dropTargetContainerClass) {\n                  destinationContainer.classList.remove(options.dropTargetContainerClass);\n              }\n              /*\n               * When a list item changed container lists or index within a list\n               * Fires Custom Event - 'sortupdate'\n               */\n              if (originElementIndex !== destinationElementIndex || originContainer !== destinationContainer) {\n                  sortableElement.dispatchEvent(new CustomEvent('sortupdate', {\n                      detail: {\n                          origin: {\n                              elementIndex: originElementIndex,\n                              index: originIndex,\n                              container: originContainer,\n                              itemsBeforeUpdate: originItemsBeforeUpdate,\n                              items: originItems\n                          },\n                          destination: {\n                              index: destinationIndex,\n                              elementIndex: destinationElementIndex,\n                              container: destinationContainer,\n                              itemsBeforeUpdate: destinationItemsBeforeUpdate,\n                              items: destinationItems\n                          },\n                          item: dragging\n                      }\n                  }));\n              }\n          });\n          var debouncedDragOverEnter = debounce(function (sortableElement, element, pageX, pageY) {\n              if (!dragging) {\n                  return;\n              }\n              // set placeholder height if forcePlaceholderSize option is set\n              if (options.forcePlaceholderSize) {\n                  store(sortableElement).placeholder.style.height = draggingHeight + 'px';\n                  store(sortableElement).placeholder.style.width = draggingWidth + 'px';\n              }\n              // if element the draggedItem is dragged onto is within the array of all elements in list\n              // (not only items, but also disabled, etc.)\n              if (Array.from(sortableElement.children).indexOf(element) > -1) {\n                  var thisHeight = getElementHeight(element);\n                  var thisWidth = getElementWidth(element);\n                  var placeholderIndex = getIndex(store(sortableElement).placeholder, element.parentElement.children);\n                  var thisIndex = getIndex(element, element.parentElement.children);\n                  // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n                  if (thisHeight > draggingHeight || thisWidth > draggingWidth) {\n                      // Dead zone?\n                      var deadZoneVertical = thisHeight - draggingHeight;\n                      var deadZoneHorizontal = thisWidth - draggingWidth;\n                      var offsetTop = offset(element).top;\n                      var offsetLeft = offset(element).left;\n                      if (placeholderIndex < thisIndex &&\n                          ((options.orientation === 'vertical' && pageY < offsetTop) ||\n                              (options.orientation === 'horizontal' && pageX < offsetLeft))) {\n                          return;\n                      }\n                      if (placeholderIndex > thisIndex &&\n                          ((options.orientation === 'vertical' && pageY > offsetTop + thisHeight - deadZoneVertical) ||\n                              (options.orientation === 'horizontal' && pageX > offsetLeft + thisWidth - deadZoneHorizontal))) {\n                          return;\n                      }\n                  }\n                  if (dragging.oldDisplay === undefined) {\n                      dragging.oldDisplay = dragging.style.display;\n                  }\n                  if (dragging.style.display !== 'none') {\n                      dragging.style.display = 'none';\n                  }\n                  // To avoid flicker, determine where to position the placeholder\n                  // based on where the mouse pointer is relative to the elements\n                  // vertical center.\n                  var placeAfter = false;\n                  try {\n                      var elementMiddleVertical = offset(element).top + element.offsetHeight / 2;\n                      var elementMiddleHorizontal = offset(element).left + element.offsetWidth / 2;\n                      placeAfter = (options.orientation === 'vertical' && (pageY >= elementMiddleVertical)) ||\n                          (options.orientation === 'horizontal' && (pageX >= elementMiddleHorizontal));\n                  }\n                  catch (e) {\n                      placeAfter = placeholderIndex < thisIndex;\n                  }\n                  if (placeAfter) {\n                      insertAfter(element, store(sortableElement).placeholder);\n                  }\n                  else {\n                      insertBefore(element, store(sortableElement).placeholder);\n                  }\n                  // get placeholders from all stores & remove all but current one\n                  Array.from(stores.values())\n                      // remove empty values\n                      .filter(function (data) { return data.placeholder !== undefined; })\n                      // foreach placeholder in array if outside of current sorableContainer -> remove from DOM\n                      .forEach(function (data) {\n                      if (data.placeholder !== store(sortableElement).placeholder) {\n                          data.placeholder.remove();\n                      }\n                  });\n              }\n              else {\n                  // get all placeholders from store\n                  var placeholders = Array.from(stores.values())\n                      .filter(function (data) { return data.placeholder !== undefined; })\n                      .map(function (data) {\n                      return data.placeholder;\n                  });\n                  // check if element is not in placeholders\n                  if (placeholders.indexOf(element) === -1 && sortableElement === element && !filter(element.children, options.items).length) {\n                      placeholders.forEach(function (element) { return element.remove(); });\n                      element.appendChild(store(sortableElement).placeholder);\n                  }\n              }\n          }, options.debounce);\n          // Handle dragover and dragenter events on draggable items\n          var onDragOverEnter = function (e) {\n              var element = e.target;\n              var sortableElement = element.isSortable === true ? element : findSortable(element, e);\n              element = findDragElement(sortableElement, element);\n              if (!dragging || !listsConnected(sortableElement, dragging.parentElement) || addData(sortableElement, '_disabled') === 'true') {\n                  return;\n              }\n              var options = addData(sortableElement, 'opts');\n              if (parseInt(options.maxItems) && filter(sortableElement.children, addData(sortableElement, 'items')).length > parseInt(options.maxItems) && dragging.parentElement !== sortableElement) {\n                  return;\n              }\n              e.preventDefault();\n              e.stopPropagation();\n              e.dataTransfer.dropEffect = store(sortableElement).getConfig('copy') === true ? 'copy' : 'move';\n              debouncedDragOverEnter(sortableElement, element, e.pageX, e.pageY);\n          };\n          addEventListener(listItems.concat(sortableElement), 'dragover', onDragOverEnter);\n          addEventListener(listItems.concat(sortableElement), 'dragenter', onDragOverEnter);\n      });\n      return sortableElements;\n  }\n  sortable.destroy = function (sortableElement) {\n      destroySortable(sortableElement);\n  };\n  sortable.enable = function (sortableElement) {\n      enableSortable(sortableElement);\n  };\n  sortable.disable = function (sortableElement) {\n      disableSortable(sortableElement);\n  };\n  /* START.TESTS_ONLY */\n  sortable.__testing = {\n      // add internal methods here for testing purposes\n      data: addData,\n      removeItemEvents: removeItemEvents,\n      removeItemData: removeItemData,\n      removeSortableData: removeSortableData,\n      removeContainerEvents: removeContainerEvents\n  };\n\n  return sortable;\n\n}());\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}